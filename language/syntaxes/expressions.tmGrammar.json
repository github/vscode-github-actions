{
  "scopeName": "source.github-actions-workflow.github-actions-expression",
  "injectionSelector": "L:source.github-actions-workflow",
  "patterns": [
    {
      "include": "#inline-expression"
    },
    {
      "include": "#block-if-expression"
    },
    {
      "include": "#if-expression"
    }
  ],
  "repository": {
    "inline-expression": {
      "match": "[|-]?\\$\\{\\{(.*?)\\}\\}",
      "name": "meta.embedded.block.github-actions-expression",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      }
    },
    "block-if-expression": {
      "contentName": "meta.embedded.block.github-actions-expression",
      "begin": "^\\s*\\b(if:) (?:(\\|)|(>))([1-9])?([-+])?(.*\\n?)",
      "beginCaptures": {
        "1": {
          "patterns": [
            {
              "include": "source.github-actions-workflow"
            }
          ]
        },
        "2": {
          "name": "keyword.control.flow.block-scalar.literal.yaml"
        },
        "3": {
          "name": "keyword.control.flow.block-scalar.folded.yaml"
        },
        "4": {
          "name": "constant.numeric.indentation-indicator.yaml"
        },
        "5": {
          "name": "storage.modifier.chomping-indicator.yaml"
        },
        "6": {
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "match": ".+",
              "name": "invalid.illegal.expected-comment-or-newline.yaml"
            }
          ]
        }
      },
      "end": "^(?=\\S)|(?!\\G)",
      "patterns": [
        {
          "begin": "^([ ]+)(?! )",
          "end": "^(?!\\1|\\s*$)",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "if-expression": {
      "match": "^\\s*\\b(if:) (.*?)$",
      "contentName": "meta.embedded.block.github-actions-expression",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "source.github-actions-workflow"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      }
    },
    "expression": {
      "patterns": [
        {
          "include": "#function-call"
        },
        {
          "include": "#context"
        },
        {
          "include": "#string"
        },
        {
          "include": "#number"
        },
        {
          "include": "#boolean"
        },
        {
          "include": "#null"
        }
      ]
    },
    "function-call": {
      "patterns": [
        {
          "match": "\\b([A-Za-z]*)\\(",
          "captures": {
            "1": {
              "name": "support.function.github-actions-expression"
            }
          }
        }
      ]
    },
    "context": {
      "patterns": [
        {
          "name": "variable.other.read.github-actions-expression",
          "match": "\\b[A-Za-z][A-Za-z0-9_\\-]*\\b"
        }
      ]
    },
    "string": {
      "name": "string.quoted.single.github-actions-expression",
      "begin": "'",
      "end": "'"
    },
    "number": {
      "name": "constant.numeric.github-actions-expression",
      "match": "\\b[0-9]+(?:.[0-9]+)?\\b"
    },
    "boolean": {
      "name": "constant.language.boolean.github-actions-expression",
      "match": "\\b(true|false)\\b"
    },
    "null": {
      "name": "constant.language.null.github-actions-expression",
      "match": "\\bnull\\b"
    }
  }
}
