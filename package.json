{
  "name": "@github/vscode-github-actions",
  "displayName": "GitHub Actions",
  "publisher": "github",
  "icon": "resources/logo.png",
  "license": "MIT",
  "repository": {
    "url": "https://github.com/github/vscode-github-actions"
  },
  "description": "GitHub Actions workflows and runs for github.com hosted repositories in VS Code",
  "version": "0.27.0",
  "engines": {
    "vscode": "^1.72.0",
    "node": ">= 16"
  },
  "extensionKind": [
    "workspace"
  ],
  "capabilities": {
    "virtualWorkspaces": true
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onView:workflows",
    "onView:settings",
    "workspaceContains:**/.github/workflows/**"
  ],
  "main": "./dist/extension-node.js",
  "browser": "./dist/extension-web.js",
  "contributes": {
    "languages": [
      {
        "id": "github-actions-workflow",
        "aliases": [
          "GitHub Actions Workflow"
        ],
        "filenamePatterns": [
          "**/.github/workflows/**/*.yml",
          "**/.github/workflows/**/*.yaml"
        ],
        "configuration": "./language/language-configuration.json",
        "icon": {
          "dark": "resources/icons/dark/lang.svg",
          "light": "resources/icons/light/lang.svg"
        }
      }
    ],
    "grammars": [
      {
        "language": "github-actions-workflow",
        "scopeName": "source.github-actions-workflow",
        "path": "./language/syntaxes/yaml.tmLanguage.json"
      },
      {
        "scopeName": "source.github-actions-workflow.github-actions-expression",
        "path": "./language/syntaxes/expressions.tmGrammar.json",
        "injectTo": [
          "source.github-actions-workflow"
        ]
      }
    ],
    "configuration": {
      "title": "GitHub Actions",
      "properties": {
        "github-actions.workflows.pinned.workflows": {
          "description": "Workflows to show in the status bar, identified by their paths",
          "type": "array",
          "scope": "window"
        },
        "github-actions.workflows.pinned.refresh.enabled": {
          "type": "boolean",
          "description": "Auto-refresh pinned workflows. Note: this uses polling and counts against your GitHub API rate limit",
          "default": false,
          "scope": "window"
        },
        "github-actions.workflows.pinned.refresh.interval": {
          "type": "number",
          "description": "Time to wait between calls to update pinned workflows in seconds",
          "default": 30,
          "scope": "window"
        },
        "github-actions.remote-name": {
          "type": "string",
          "description": "The name of the repository's git remote that points to GitHub",
          "default": "origin",
          "scope": "window"
        },
        "github-actions.use-enterprise": {
          "type": "boolean",
          "markdownDescription": "If this is set to true, use the auth provider for the GitHub Enterprise URL configured in `github-enterprise.uri`",
          "default": false,
          "scope": "window"
        }
      }
    },
    "commands": [
      {
        "command": "github-actions.explorer.refresh",
        "category": "GitHub Actions",
        "title": "Refresh",
        "icon": {
          "dark": "resources/icons/dark/refresh.svg",
          "light": "resources/icons/light/refresh.svg"
        }
      },
      {
        "command": "github-actions.explorer.current-branch.refresh",
        "category": "GitHub Actions",
        "title": "Refresh current branch",
        "icon": {
          "dark": "resources/icons/dark/refresh.svg",
          "light": "resources/icons/light/refresh.svg"
        }
      },
      {
        "command": "github-actions.explorer.openRun",
        "category": "GitHub Actions",
        "title": "Open workflow run",
        "when": "viewItem =~ /workflow/"
      },
      {
        "command": "github-actions.explorer.openWorkflowFile",
        "category": "GitHub Actions",
        "title": "Open workflow",
        "when": "viewItem =~ /workflow/"
      },
      {
        "command": "github-actions.explorer.triggerRun",
        "category": "GitHub Actions",
        "title": "Trigger workflow",
        "when": "viewItem =~ /workflow/ && viewItem =~ /dispatch/",
        "icon": {
          "dark": "resources/icons/dark/run.svg",
          "light": "resources/icons/light/run.svg"
        }
      },
      {
        "command": "github-actions.workflow.run.open",
        "category": "GitHub Actions",
        "title": "Open workflow run",
        "when": "viewItem =~ /run/",
        "icon": "$(globe)"
      },
      {
        "command": "github-actions.workflow.logs",
        "category": "GitHub Actions",
        "title": "View job logs",
        "when": "viewItem =~ /job/",
        "icon": {
          "dark": "resources/icons/dark/logs.svg",
          "light": "resources/icons/light/logs.svg"
        }
      },
      {
        "command": "github-actions.step.logs",
        "category": "GitHub Actions",
        "title": "View step logs",
        "when": "viewItem =~ /step/",
        "icon": "$(globe)"
      },
      {
        "command": "github-actions.workflow.run.rerun",
        "category": "GitHub Actions",
        "title": "Rerun workflow run",
        "when": "viewItem =~ /run/ && viewItem =~ /rerunnable/"
      },
      {
        "command": "github-actions.workflow.run.cancel",
        "category": "GitHub Actions",
        "title": "Cancel workflow run",
        "when": "viewItem =~ /run/ && viewItem =~ /cancelable/"
      },
      {
        "command": "github-actions.settings.secrets.manage",
        "category": "GitHub Actions",
        "title": "Add new secret",
        "icon": "$(globe)"
      },
      {
        "command": "github-actions.settings.secret.add",
        "category": "GitHub Actions",
        "title": "Add new secret",
        "icon": {
          "dark": "resources/icons/dark/add.svg",
          "light": "resources/icons/light/add.svg"
        }
      },
      {
        "command": "github-actions.settings.secret.copy",
        "category": "GitHub Actions",
        "title": "Copy secret name"
      },
      {
        "command": "github-actions.settings.secret.update",
        "category": "GitHub Actions",
        "title": "Update secret",
        "icon": {
          "dark": "resources/icons/dark/edit.svg",
          "light": "resources/icons/light/edit.svg"
        }
      },
      {
        "command": "github-actions.settings.secret.delete",
        "category": "GitHub Actions",
        "title": "Delete secret",
        "icon": {
          "dark": "resources/icons/dark/remove.svg",
          "light": "resources/icons/light/remove.svg"
        }
      },
      {
        "command": "github-actions.settings.variable.add",
        "category": "GitHub Actions",
        "title": "Add new variable",
        "icon": {
          "dark": "resources/icons/dark/add.svg",
          "light": "resources/icons/light/add.svg"
        }
      },
      {
        "command": "github-actions.settings.variable.update",
        "category": "GitHub Actions",
        "title": "Update variable",
        "icon": {
          "dark": "resources/icons/dark/edit.svg",
          "light": "resources/icons/light/edit.svg"
        }
      },
      {
        "command": "github-actions.settings.variable.delete",
        "category": "GitHub Actions",
        "title": "Delete variable",
        "icon": {
          "dark": "resources/icons/dark/remove.svg",
          "light": "resources/icons/light/remove.svg"
        }
      },
      {
        "command": "github-actions.settings.variable.copy-name",
        "category": "GitHub Actions",
        "title": "Copy variable name"
      },
      {
        "command": "github-actions.settings.variable.copy-value",
        "category": "GitHub Actions",
        "title": "Copy variable value"
      },
      {
        "command": "github-actions.workflow.pin",
        "category": "GitHub Actions",
        "title": "Pin workflow",
        "icon": "$(pin)"
      },
      {
        "command": "github-actions.workflow.unpin",
        "category": "GitHub Actions",
        "title": "Unpin workflow",
        "icon": "$(pinned)"
      },
      {
        "command": "github-actions.sign-in",
        "title": "Sign in to GitHub"
      }
    ],
    "views": {
      "github-actions": [
        {
          "id": "github-actions.current-branch",
          "name": "Current Branch",
          "when": "github-actions.internet-access && github-actions.signed-in && github-actions.has-repos"
        },
        {
          "id": "github-actions.workflows",
          "name": "Workflows",
          "when": "github-actions.internet-access && github-actions.signed-in && github-actions.has-repos"
        },
        {
          "id": "github-actions.settings",
          "name": "Settings",
          "when": "github-actions.internet-access && github-actions.signed-in && github-actions.has-repos"
        },
        {
          "id": "github-actions.empty-view",
          "name": "",
          "when": "!github-actions.internet-access || !github-actions.signed-in || !github-actions.has-repos"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "github-actions.empty-view",
        "contents": "Sign in to GitHub to display runs, workflows, and configure Actions settings.\n[Sign in to GitHub](command:github-actions.sign-in)",
        "when": "!github-actions.signed-in"
      },
      {
        "view": "github-actions.empty-view",
        "contents": "Unable to connect to the GitHub API, please check your internet connection.\n[Refresh](command:github-actions.explorer.refresh)",
        "when": "github-actions.signed-in && !github-actions.internet-access"
      },
      {
        "view": "github-actions.empty-view",
        "contents": "No GitHub repositories found. Please open a folder that contains a GitHub repository.",
        "when": "github-actions.internet-access && github-actions.signed-in && !github-actions.has-repos"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "github-actions",
          "title": "GitHub Actions",
          "icon": "resources/icons/light/explorer.svg"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "github-actions.explorer.refresh",
          "group": "navigation",
          "when": "view == github-actions.workflows || view == github-actions.settings"
        },
        {
          "command": "github-actions.explorer.current-branch.refresh",
          "group": "navigation",
          "when": "view == github-actions.current-branch"
        }
      ],
      "editor/title": [
        {
          "command": "github-actions.explorer.triggerRun",
          "when": "(githubActions:activeFile =~ /rdispatch/ || githubActions:activeFile =~ /wdispatch/) && resourceExtname =~ /\\.ya?ml/",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "github-actions.explorer.openWorkflowFile",
          "when": "viewItem =~ /workflow/"
        },
        {
          "command": "github-actions.workflow.pin",
          "group": "inline@1",
          "when": "viewItem =~ /workflow/ && viewItem =~ /pinnable/"
        },
        {
          "command": "github-actions.workflow.pin",
          "when": "viewItem =~ /workflow/ && viewItem =~ /pinnable/"
        },
        {
          "command": "github-actions.workflow.unpin",
          "group": "inline@2",
          "when": "viewItem =~ /workflow/ && viewItem =~ /pinned/"
        },
        {
          "command": "github-actions.workflow.unpin",
          "when": "viewItem =~ /workflow/ && viewItem =~ /pinned/"
        },
        {
          "command": "github-actions.explorer.triggerRun",
          "group": "inline@10",
          "when": "viewItem =~ /rdispatch/ || viewItem =~ /wdispatch/"
        },
        {
          "command": "github-actions.explorer.triggerRun",
          "when": "viewItem =~ /rdispatch/ || viewItem =~ /wdispatch/"
        },
        {
          "command": "github-actions.workflow.run.open",
          "when": "viewItem =~ /run\\s/",
          "group": "inline"
        },
        {
          "command": "github-actions.workflow.logs",
          "group": "inline",
          "when": "viewItem =~ /job/ && viewItem =~ /completed/"
        },
        {
          "command": "github-actions.step.logs",
          "group": "inline",
          "when": "viewItem =~ /step/ && viewItem =~ /completed/"
        },
        {
          "command": "github-actions.workflow.run.cancel",
          "when": "viewItem =~ /run/ && viewItem =~ /cancelable/"
        },
        {
          "command": "github-actions.workflow.run.rerun",
          "when": "viewItem =~ /run/ && viewItem =~ /rerunnable/"
        },
        {
          "command": "github-actions.settings.secret.add",
          "group": "inline",
          "when": "viewItem == 'secrets' || viewItem == 'environment-secrets'"
        },
        {
          "command": "github-actions.settings.secret.update",
          "when": "viewItem == 'repo-secret' || viewItem == 'env-secret'",
          "group": "inline@1"
        },
        {
          "command": "github-actions.settings.secret.copy",
          "when": "viewItem == 'repo-secret' || viewItem == 'env-secret' || viewItem == 'org-secret'",
          "group": "context"
        },
        {
          "command": "github-actions.settings.secret.delete",
          "when": "viewItem == 'repo-secret' || viewItem == 'env-secret' ",
          "group": "inline@2"
        },
        {
          "command": "github-actions.settings.variable.add",
          "group": "inline",
          "when": "viewItem == 'repo-variables' || viewItem == 'environment-variables'"
        },
        {
          "command": "github-actions.settings.variable.update",
          "group": "inline@1",
          "when": "viewItem == 'repo-variable' || viewItem == 'env-variable'"
        },
        {
          "command": "github-actions.settings.variable.delete",
          "group": "inline@2",
          "when": "viewItem == 'repo-variable' || viewItem == 'env-variable'"
        },
        {
          "command": "github-actions.settings.variable.copy-name",
          "when": "viewItem == 'repo-variable' || viewItem == 'env-variable' || viewItem == 'org-variable'",
          "group": "context"
        },
        {
          "command": "github-actions.settings.variable.copy-value",
          "when": "viewItem == 'repo-variable' || viewItem == 'env-variable' || viewItem == 'org-variable'",
          "group": "context"
        }
      ],
      "commandPalette": [
        {
          "command": "github-actions.explorer.openRun",
          "when": "false"
        },
        {
          "command": "github-actions.explorer.openWorkflowFile",
          "when": "false"
        },
        {
          "command": "github-actions.explorer.triggerRun",
          "when": "false"
        },
        {
          "command": "github-actions.workflow.run.open",
          "when": "false"
        },
        {
          "command": "github-actions.workflow.logs",
          "when": "false"
        },
        {
          "command": "github-actions.step.logs",
          "when": "false"
        },
        {
          "command": "github-actions.workflow.run.rerun",
          "when": "false"
        },
        {
          "command": "github-actions.workflow.run.cancel",
          "when": "false"
        },
        {
          "command": "github-actions.settings.secrets.manage",
          "when": "false"
        },
        {
          "command": "github-actions.settings.secret.add",
          "when": "false"
        },
        {
          "command": "github-actions.settings.secret.copy",
          "when": "false"
        },
        {
          "command": "github-actions.settings.secret.update",
          "when": "false"
        },
        {
          "command": "github-actions.settings.secret.delete",
          "when": "false"
        },
        {
          "command": "github-actions.settings.variable.add",
          "when": "false"
        },
        {
          "command": "github-actions.settings.variable.update",
          "when": "false"
        },
        {
          "command": "github-actions.settings.variable.delete",
          "when": "false"
        },
        {
          "command": "github-actions.settings.variable.copy-name",
          "when": "false"
        },
        {
          "command": "github-actions.settings.variable.copy-value",
          "when": "false"
        },
        {
          "command": "github-actions.workflow.pin",
          "when": "false"
        },
        {
          "command": "github-actions.workflow.unpin",
          "when": "false"
        },
        {
          "command": "github-actions.sign-in",
          "when": "false"
        }
      ]
    }
  },
  "scripts": {
    "clean": "rimraf ./dist ./out",
    "package": "npm run clean && vsce package",
    "build": "webpack --mode production",
    "vscode:prepublish": "npm run build",
    "watch": "webpack --watch --mode development --env esbuild",
    "open-in-browser": "vscode-test-web --extensionDevelopmentPath=. .",
    "lint": "eslint . --ext .ts",
    "lint-fix": "eslint . --ext .ts --fix",
    "format": "prettier --write \"**/*.ts\"",
    "format-check": "prettier --check \"**/*.ts\"",
    "test": "cross-env NODE_OPTIONS=\"--experimental-vm-modules\" jest",
    "test-watch": "NODE_OPTIONS=\"--experimental-vm-modules\" jest --watch"
  },
  "devDependencies": {
    "@types/jest": "^29.0.3",
    "@types/libsodium-wrappers": "^0.7.10",
    "@types/uuid": "^3.4.6",
    "@types/vscode": "^1.72.0",
    "@typescript-eslint/eslint-plugin": "^5.40.0",
    "@typescript-eslint/parser": "^5.40.0",
    "@vscode/test-web": "*",
    "cross-env": "^7.0.3",
    "eslint": "^8.25.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "^29.0.3",
    "node-loader": "^0.6.0",
    "prettier": "^2.8.3",
    "rimraf": "^3.0.1",
    "source-map-loader": "^4.0.1",
    "ts-jest": "^29.0.3",
    "ts-loader": "^9.4.1",
    "typescript": "^4.9.4",
    "webpack": "^5.76.0",
    "webpack-cli": "^4.10.0"
  },
  "dependencies": {
    "@actions/languageserver": "*",
    "@actions/workflow-parser": "*",
    "@octokit/rest": "^19.0.7",
    "@vscode/vsce": "^2.19.0",
    "buffer": "^6.0.3",
    "crypto-browserify": "^3.12.0",
    "dayjs": "^1.11.7",
    "elliptic": "6.5.7",
    "libsodium-wrappers": "^0.7.10",
    "path-browserify": "^1.0.1",
    "ssh-config": "^3.0.0",
    "stream-browserify": "^3.0.0",
    "timers-browserify": "^2.0.12",
    "tunnel": "0.0.6",
    "util": "^0.12.1",
    "uuid": "^3.3.3",
    "vscode-languageclient": "^8.0.2"
  },
  "overrides": {
    "browserify-sign": {
      "elliptic": "6.5.7"
    },
    "create-ecdh": {
      "elliptic": "6.5.7"
    }
  }
}
